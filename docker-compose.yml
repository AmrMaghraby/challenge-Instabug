version: '2'

services:

  # Our Redis service:
  redis:
    image: redis:5-alpine
    restart: always
    volumes:
      # We'll mount the 'redis-data' volume into the location redis stores it's data:
      - ./volumes/redis-data:/data
    command: redis-server --appendonly yes
    ports: 
      - "6379:6379"
    env_file:
      - '.env'
    environment:
      - REDIS_URL=redis://redis:6379/0
 
  es:
    image: elasticsearch:5.4.0-alpine
    restart: always
    ports:
      - "9200:9200"
    volumes:
      - ./volumes/es:/usr/share/elasticsearch/data
    env_file:
      - '.env'
  
  sidekiq:
    build: .
    command: sidekiq 
    volumes:
      - '.:/app'
    env_file:
      - '.env'
    depends_on:
      - 'redis'
    environment:
      - REDIS_URL=redis://redis:6379/0

  web:
    build: .
    command: sh -c "sh wait-curl.sh es:9200 && sh ./init.sh && rails s -p 3000 -b '0.0.0.0'"
    restart: always
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    links:
      - redis
      - es
    environment:
      - REDIS_HOST=redis
      - ES_HOST=es
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - '.env'

#  worker:
#    build: .
#    command: sh -c "sh wait-curl.sh es:9200 && ./db/./workers"
#    restart: always
#    depends_on:
#      - web
#    environment:
#      - REDIS_HOST=redis
#      - ES_HOST=es
